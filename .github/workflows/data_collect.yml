name: AQI Data Collection

on:
  schedule:
    - cron: '0 * * * *'  # Hourly for API client
    - cron: '5 0 * * *'  # Daily at 00:05 for Open-Meteo
  workflow_dispatch:

jobs:
  aqi_hourly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install openmeteo-requests requests-cache retry-requests numpy pandas hopsworks==4.2.*
      - name: Set up environment variables
        run: echo "${{ secrets.ENV_FILE }}" > .env
      - name: Set Hopsworks API key
        run: echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> $GITHUB_ENV
      - name: Set Hopsworks Project
        run: echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> $GITHUB_ENV
      - name: Run AQI hourly pipeline with error handling
        run: |
          set -e
          python data_collection/hourly_aqi_pipeline.py || {
            echo "Error: AQI hourly pipeline failed. Check unit conversion, input data, and Hopsworks API key/project.";
            exit 1;
          }
      - name: Verify unit conversion
        run: |
          python -c "import pandas as pd; df = pd.read_csv('karachi_merged_data_aqi.csv'); assert all([col in df.columns for col in ['pm2_5','pm10','co','so2','o3','no2','aqi']]); print('Unit conversion verified.')"

  openmeteo_daily:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install openmeteo-requests requests-cache retry-requests numpy pandas hopsworks==4.2.*
      - name: Set up environment variables
        run: echo "${{ secrets.ENV_FILE }}" > .env
      - name: Set Hopsworks API key
        run: echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> $GITHUB_ENV
      - name: Set Hopsworks Project
        run: echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> $GITHUB_ENV
      - name: Run Open-Meteo daily backfill
        run: python data_collection/daily_openmeteo_backfill.py